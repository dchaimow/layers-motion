function eventRelatedAverage = averageEventRelated(eventRelatedData)
if iscell(eventRelatedData)
    % checks if the list/order of conditions is the same:
    conditionList = ...
        extractSameParameter(eventRelatedData, @(c) {c(:).condition});
    nConditions = length(conditionList);
    eventRelatedDataConcatenated = struct();
    for zCondition = 1:nConditions
        eventRelatedDataConcatenated(zCondition).condition = ...
            conditionList{zCondition};
        eventRelatedDataConcatenated(zCondition).t = ...
            extractSameParameter(eventRelatedData, ...
            @(c) c(zCondition).t);
        eventRelatedDataConcatenated(zCondition).tStart = ...
            extractSameParameter(eventRelatedData, ...
            @(c) c(zCondition).tStart);
        eventRelatedDataConcatenated(zCondition).tStop = ...
            extractSameParameter(eventRelatedData, ...
            @(c) c(zCondition).tStop);                
       
        alignedDataCell = ...
            cellfun(@(c) c(zCondition).alignedData,eventRelatedData,...
            'UniformOutput',false);
        nDims = extractSameParameter(alignedDataCell,@(c) ndims(c));
        eventRelatedDataConcatenated(zCondition).alignedData = ...
            cat(nDims,alignedDataCell{:});
    end
    eventRelatedAverage = ...
        averageEventRelated(eventRelatedDataConcatenated);    
else
    for zCondition = 1:length(eventRelatedData)
        timeDimension = ndims(eventRelatedData(zCondition).alignedData);
        eventRelatedData(zCondition).m = ...
            nanmean(eventRelatedData(zCondition).alignedData,timeDimension);
        N = sum(~isnan(eventRelatedData(1).alignedData),timeDimension);
        eventRelatedData(zCondition).se = ...
            nanstd(eventRelatedData(zCondition).alignedData,0,...
            ndims(eventRelatedData(zCondition).alignedData))./...
            sqrt(N);
    end
    eventRelatedAverage = rmfield(eventRelatedData,'alignedData');        
end
end